{"body":"\r\nPlease read this document till the end before to proceed for actual\r\ninstallation\r\n\r\n\r\nPrerequisite\r\n------------\r\n- Make sure your device is connected to wifi network.\r\n- Note down the device's IP-address.\r\n- The best case would be to give a static IP-address to the\r\n  device.\r\n\r\nInstallation\r\n------------\r\n\r\nMake sure following file are in the same directory from where you run\r\n``install.sh`` file\r\n\r\n- install.sh\r\n- default.prop\r\n- aakash.sh\r\n- init.rc\r\n- linux.tar.gz\r\n- tar\r\n- MD5CHECK\r\n- APL.apk \r\n\r\n\r\nOpen the terminal and change to the directory where all the above\r\nfiles exist and type::\r\n\r\n   bash install.sh <IP-address>\r\n\r\nfor example::\r\n\r\n   bash install.sh 10.42.0.13\r\n\r\nand follow the instructions which appears on the terminal.\r\n\r\nNote\r\n----\r\n- Please make sure that you give the same IP-address at the second\r\n  time you run ``install.sh``\r\n- You need to ``turn ON`` the device manually\r\n\r\n\r\n\r\nWhat the script actually does?\r\n------------------------------\r\n\r\n*Less*\r\n\r\nAakash Programming Language, APL for short, is a web based front end\r\nto four programming languages C, C++, Python and Scilab. In\r\nthe backend, we run a webserver in a ``chroot'd`` environment. The\r\n``chroot`` environment is a custom made GNU/Linux distribution without any\r\n'Xserver'. Instead of having a 'Xserver' which is high on both CPU and\r\nmemory, we use a X virtual framebuffer called ``Xvfb``. ``Xvfb`` is low on\r\nboth CPU and memory and requires no dedicated display hardware for\r\ngraphical display. All display of graphs in APL is done using ``Xvfb``.\r\n\r\n\r\n*More*\r\n\r\nThe 'chroot' environment exist in the directory called ``linux`` which\r\nis in the directory ``/data/local/`` of the device. The first step is\r\nto make the path ``/data/local/`` writable, for this purpose the\r\nscript makes backup of file ``default.prop`` from the devices to the\r\nworking directory of host system and pushes a modified version of\r\n``default.prop`` in ``/`` of the device. The device needs a reboot for\r\nthe changes to take effect.\r\n\r\nThe second step is to copy a tarball ``linux.tar.gz`` to the same\r\nlocation ``/data/local/`` of the device and untar it. The script also\r\ncopies a binary `tar` file which does the work of extracting a\r\ntarball. Once this is done, we have an ``chroot`` environment\r\nready. The hierarchy of ``/data/local/linux/`` is same as any other\r\nGNU/Linux distribution, but completely inactive with 'no' web-server and\r\ngraphical support.\r\n\r\nThe mounting of file-systems such as ``/proc``, ``/sys`` and\r\n``/dev/pts/`` is done by another bash script ``aakash.sh`` which also\r\ntakes care of initiating a webserver every time the device is turned\r\nON. ``aakash.sh`` also sets an display environment by initiating an\r\nvirtual framebuffer environment using ``Xvfb``. ``aakash.sh`` script\r\nis called by Android's ``init.rc`` file at boot time.\r\n\r\n- below lines in ``init.rc`` calls ``aakash.sh``::\r\n\r\n           service myscript /data/local/aakash.sh\r\n\t       oneshot\r\n\r\n\r\nOnce all the files and directories are in place, ``install.sh`` script\r\ndoes the work of cleanup. This will remove all temporary file created\r\nat the time of installation and lock the device back by updating the \r\noriginal ``default.prop``.\r\nFor more details, please refer respective bash scripts.\r\n\r\nPlease mail us for any further query:\r\n\r\nsrikant@fossee.in\r\n\r\nisachin@iitb.ac.in\r\n","tagline":"Contain system related scripts and html files","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"APL (Aakash Programming Lab)","google":""}