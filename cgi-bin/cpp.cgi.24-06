#! /usr/bin/perl
#use strict;
use CGI;
use CGI::Carp 'fatalsToBrowser';
use JSON;
system("/bin/rm /tmp/cpsave/*.cpp");
system("/bin/rm /tmp/1.cpp /tmp/cperror /tmp/cpbin");
system("/bin/rm /tmp/1.c /tmp/cerror /tmp/cbin /tmp/1.py");
my $request = new CGI;
my $incode=$request->param('code');
my $flag_save1=$request->param('flag_save1');
my $check = $request->param('check');
my $filename1=$request->param('filename1');
my $codefile="/tmp/1.cpp";
my $errorfile="/tmp/cperror";
my $binary="/tmp/cpbin";
my $tmpfile="/tmp/buffer";
my $results;
noguimode();
sub noguimode{
	open CODE,">$codefile";
	print CODE $incode;
	close CODE;
	print "Content-type: text/html\n\n";
	my $path=$ENV{'PATH'};
	$< = 0;
	$ENV{'HOME'}="/var/www/html/cpp";
	$ENV{'DISPLAY'}=":0.0";
	if($flag_save1==1)
        {
        system("/bin/cp /tmp/1.cpp /tmp/cpsave/$filename1.cpp");
	}
	if($flag_save1==0&&$check==0)
	{
       	system("g++ -w $codefile -o $binary 2>$tmpfile");
	if( -s $tmpfile)
		{
		system("mv $tmpfile $errorfile");	
		}
	}
	$results->{"error"}=$error;
	my $json=objToJson($results);
	print $json;
}

if($check)
        {
    	system("/bin/ls /var/www/html/cpp/code > /var/www/html/check.txt");
        }

